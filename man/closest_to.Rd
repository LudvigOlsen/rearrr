% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/by_distance.R
\name{closest_to}
\alias{closest_to}
\title{Orders values by shortest distance to the target}
\usage{
closest_to(
  data,
  col = NULL,
  target = NULL,
  target_fn = NULL,
  shuffle_ties = FALSE
)
}
\arguments{
\item{data}{\code{data frame} or \code{vector}.}

\item{col}{Column to create sorting factor by. When \code{NULL} and \code{data} is a \code{data frame},
the row numbers are used.}

\item{target}{Target value. (Logical)}

\item{target_fn}{Function for extracting target value. (Logical)

\strong{N.B.} Either \code{target} or \code{target_fn} should be specified.

\strong{N.B.} When \code{data} is grouped,
the \code{target_fn} function is applied group-wise.}

\item{shuffle_ties}{Whether to shuffle elements with the same distance to the target. (Logical)}
}
\value{
The sorted \code{data frame} / \code{vector}.
}
\description{
\Sexpr[results=rd, stage=render]{lifecycle::badge("experimental")}

Values are ordered by how close they are from the target value.

\strong{Example}:

The column values:

\code{c(1, 2, 3, 4, 5}

and \code{target = 2}

are \strong{ordered as}:

\code{c(}\strong{\code{2}}\code{, 1, 3, 4, 5)}
}
\examples{
\donttest{
# Attach packages
library(rearrr)
library(dplyr)

# Set seed
set.seed(1)

# Create a data frame
df <- data.frame(
  "index" = 1:10,
  "A" = sample(1:10),
  "B" = runif(10),
  "G" = c(1, 1, 1, 2, 2,
          2, 3, 3, 3, 3),
  stringsAsFactors = FALSE
)

# Furthest from the third row
closest_to(df, target = 3)$index

# By each of the columns
closest_to(df, col = "A", target = 3)$A
closest_to(df, col = "A", target_fn = median)$A
closest_to(df, col = "B", target = 0.5)$B
closest_to(df, col = "B", target_fn = median)$B

# Shuffle the elements with the same distance to the target
closest_to(df, col = "A", target_fn = median, shuffle_ties = TRUE)$A

# Grouped by G
df \%>\%
  dplyr::select(G, A) \%>\%  # For clarity
  dplyr::group_by(G) \%>\%
  closest_to(col = "A", target_fn = median)

# Plot the centered values
plot(
  x = 1:10,
  y = closest_to(df, col = "B", target_fn = median)$B
)
plot(
  x = 1:10,
  y = closest_to(df, col = "A", target_fn = median, shuffle_ties = TRUE)$A
)
}
}
\seealso{
Other rearrange functions: 
\code{\link{center_max}()},
\code{\link{center_min}()},
\code{\link{furthest_from}()},
\code{\link{pair_extremes}()},
\code{\link{position_max}()},
\code{\link{position_min}()},
\code{\link{rev_windows}()}
}
\author{
Ludvig Renbo Olsen, \email{r-pkgs@ludvigolsen.dk}
}
\concept{rearrange functions}
