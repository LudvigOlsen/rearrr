% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/expand2d.R
\name{expand2d}
\alias{expand2d}
\title{Expand the values around an origin}
\usage{
expand2d(
  data,
  x_col = NULL,
  y_col = NULL,
  suffix = "_expanded",
  multiplier = 1,
  multiplier_fn = NULL,
  origin = c(0, 0),
  origin_fn = NULL,
  exponentiate = FALSE,
  add_one_exp = TRUE,
  mult_col_name = ifelse(isTRUE(exponentiate), ".exponent", ".multiplier"),
  origin_col_name = ".origin"
)
}
\arguments{
\item{data}{\code{data.frame} or \code{vector}.}

\item{x_col}{Name of x column in \code{data}. If \code{NULL} or \code{data} is a vector,
the index of \code{data} is used.}

\item{y_col}{Name of y column in \code{data}. If \code{data} is a data frame, it must be specified.}

\item{suffix}{Suffix to add to the names of the generated columns.}

\item{origin}{Coordinates of the origin to expand around. Must be a vector with 2 elements (orig_x, orig_y).
Ignored when \code{origin_fn} is not \code{NULL}.}

\item{origin_fn}{Function for finding the origin coordinates to expand the values around.
Should have 2 input arguments (a vector with x-values, a vector with y-values) and
return a vector with exactly 2 elements (orig_x, orig_y).}

\item{add_one_exp}{Whether to add 1/-1 before exponentiating to ensure the values don't contract.
The added value is subtracted after the exponentiation.

Added with:
\code{x <- x + sign(x)} ; \code{y <- y + sign(y)}.

Ignored when \code{exponentiate} is \code{FALSE}.}

\item{degree_col_name}{Name of new column with the degrees.}
}
\value{
Data frame with three new columns containing the rotated x- and y-values and the degrees.
}
\description{
\Sexpr[results=rd, stage=render]{lifecycle::badge("experimental")}

The values are expanded such that the distance to the specified origin is increased in both dimensions.

The origin can be supplied as coordinates or as a function that returns coordinates. The
latter can be useful when supplying a grouped data frame and expanding around e.g. the centroid
of each group.

The multiplier/exponent can can supplied as a constant or as a function that returns a constant.
The latter can be useful when supplying a grouped data frame and the multiplier/exponent depends
on the data in the groups.
}
\details{
Applies the following rotation matrix:\tabular{ll}{
   [ \eqn{cos \theta} \tab , \eqn{ -sin \theta} ] \cr
   [ \eqn{sin \theta} \tab , \eqn{ cos \theta}  ] \cr
}


That is:

\eqn{x' = x cos \theta - y sin \theta}

\eqn{y' = x sin \theta + y cos \theta}

Where \eqn{\theta} is the angle in radians.

As specified at \href{https://en.wikipedia.org/wiki/Rotation_matrix}{Wikipedia/Rotation_matrix}.
}
\examples{
\donttest{
# Attach packages
library(rearrr)
library(dplyr)
library(ggplot2)

# Set seed
set.seed(1)

# Create a data frame
df <- data.frame(
  "x" = runif(20),
  "y" = runif(20),
  "g" = c(1, 1, 1, 1, 1,
          2, 2, 2, 2, 2,
          3, 3, 3, 3, 3,
          4, 4, 4, 4, 4)
)


# Expand values
expand2d(df, multiplier = 1.2, x_col="x", y_col="y")

# Expand x and y around the centroid
# We use exponentiation for a more drastic effect
# The add_one_exp makes sure it expands even
# when x or y is in the range [>-1, <1]
df_expanded <- df \%>\%
  expand2d(x_col = "x",
           y_col = "y",
           multiplier = c(1, 2.0, 3.0, 4.0),
           origin_fn = centroid,
           exponentiate = TRUE,
           add_one_exp = TRUE)
df_expanded

# Plot the expansions of x and y around the overall centroid
ggplot(df_expanded, aes(x = x_expanded, y = y_expanded, color = factor(.exponent))) +
  geom_vline(xintercept = df_expanded[[".origin"]][[1]][[1]],
             size = 0.2, alpha = .4, linetype="dashed") +
  geom_hline(yintercept = df_expanded[[".origin"]][[1]][[2]],
             size = 0.2, alpha = .4, linetype="dashed") +
  geom_point() +
  theme_minimal() +
  labs(x = "x", y="y", color="Exponent")

# Expand x and y around the centroid using multiplication
df_expanded <- df \%>\%
  expand2d(x_col = "x",
           y_col = "y",
           multiplier = c(1, 1.5, 2.0, 2.5),
           origin_fn = centroid,
           exponentiate = FALSE)
df_expanded

# Plot the expansions of x and y around the overall centroid
ggplot(df_expanded, aes(x = x_expanded, y = y_expanded, color = factor(.multiplier))) +
  geom_vline(xintercept = df_expanded[[".origin"]][[1]][[1]],
             size = 0.2, alpha = .4, linetype="dashed") +
  geom_hline(yintercept = df_expanded[[".origin"]][[1]][[2]],
             size = 0.2, alpha = .4, linetype="dashed") +
  geom_point() +
  theme_minimal() +
  labs(x = "x", y="y", color="Multiplier")

}
}
\seealso{
Other mutate functions: 
\code{\link{flip_values}()},
\code{\link{rotate2d}()}
}
\author{
Ludvig Renbo Olsen, \email{r-pkgs@ludvigolsen.dk}
}
\concept{mutate functions}
