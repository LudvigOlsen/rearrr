% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/roll_elements.R
\name{roll_elements}
\alias{roll_elements}
\title{Roll elements}
\usage{
roll_elements(data, col = NULL, n = NULL, n_fn = NULL, ...)
}
\arguments{
\item{data}{\code{vector} or \code{data.frame} to roll elements of. When a \code{data.frame} is
grouped, the rolling is applied group-wise.}

\item{col}{Name of column to roll in \code{`data`}. If \code{NULL}, the rows are rolled.

\strong{N.B.} only used when \code{`data`} is a \code{data.frame}.}

\item{n}{Number of positions to roll. A positive number rolls \code{`x`} \emph{left}.
A negative number rolls \code{`x`} \emph{right}.}

\item{n_fn}{Function to find \code{`n`}. Useful when \code{`x`} is a grouped \code{data.frame}, where
we want \code{`n`} to depend on the rows in the group. The entire subset is passed to the function,
and it must return an integer-like scalar.

E.g. \code{function(x){round(median(x$v))}} would get the median of the \code{v} variable in the subset.}

\item{...}{Extra arguments for \code{`n_fn`}.}
}
\value{
Rolled \code{`x`}.
}
\description{
\Sexpr[results=rd, stage=render]{lifecycle::badge("experimental")}

Rolls positions of elements.

Example:

Rolling \code{c(1, 2, 3, 4, 5)} with \code{`n` = 2} becomes:

\code{c(3, 4, 5, 1, 2)}

Should not be confused with \code{\link[rearrr:roll_values]{roll_values()}},
which changes the \code{value} of the elements and wraps to a given range.
}
\examples{
\donttest{
# Attach packages
library(rearrr)
library(dplyr)

# Roll vector left
roll_elements(1:10, n = 2)

# Roll vector right
roll_elements(1:10, n = -2)

# Roll vector left by median (rounded to 6)
roll_elements(1:10, n_fn = function(x){round(median(x))})

# Pass extra arguments to 'n_fn' via '...'
roll_elements(
  1:10,
  n_fn = function(x, y){round(median(x)) + y},
  y = 2
)

#
# Roll data.frame
#

# Set seed

# Create a data frame
df <- data.frame(
  "x" = 1:20,
  "y" = runif(20)*10,
  "g" = rep(1:4, each = 5)
)

# Roll rows left/up
roll_elements(df, n = 2)

# Roll rows right/down
roll_elements(df, n = -2)

# Roll 'x' column right/down
roll_elements(df, col = "x", n = -2)

# Roll rows by median in each group
roll_elements(
  df \%>\% dplyr::group_by(g),
  n_fn = function(x, y){round(median(x$y)) - 2},
  y = 2
)

}
}
\seealso{
Other roll functions: 
\code{\link{roll_values}()}
}
\author{
Ludvig Renbo Olsen, \email{r-pkgs@ludvigolsen.dk}
}
\concept{roll functions}
